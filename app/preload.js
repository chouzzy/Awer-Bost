!function(e,r){if("object"==typeof exports&&"object"==typeof module)module.exports=r();else if("function"==typeof define&&define.amd)define([],r);else{var n=r();for(var o in n)("object"==typeof exports?exports:e)[o]=n[o]}}(global,(()=>(()=>{"use strict";var e={r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},r={};e.r(r);const n=require("electron"),o={send(e,r){n.ipcRenderer.send(e,r)},on(e,r){const o=(e,...n)=>r(...n);return n.ipcRenderer.on(e,o),()=>{n.ipcRenderer.removeListener(e,o)}},sendMessage:e=>n.ipcRenderer.send("send-message",e),dateSelected:e=>n.ipcRenderer.send("date-selected",e),saveFile:()=>n.ipcRenderer.invoke("dialog:saveFile"),callFront:e=>n.ipcRenderer.on("call-front",((r,n)=>e(n))),isLoading:e=>n.ipcRenderer.on("is-loading",((r,n)=>e(n))),loginError:e=>n.ipcRenderer.on("login-error",((r,n)=>e(n))),scrapeData:e=>n.ipcRenderer.send("scrape-data",e)};return n.contextBridge.exposeInMainWorld("ipc",o),r})()));
//# sourceMappingURL=preload.js.map